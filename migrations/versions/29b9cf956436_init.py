"""Init

Revision ID: 29b9cf956436
Revises: 
Create Date: 2025-05-09 18:02:12.471832

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '29b9cf956436'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('manual_test_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('raw_headers', sa.TEXT(), nullable=True),
    sa.Column('payload_sent', sa.TEXT(), nullable=False),
    sa.Column('response_data', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt_filters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('invalid_characters', sa.String(length=255), nullable=True),
    sa.Column('words_to_replace', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('excerpt', sa.Text(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('added', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prompt', sa.TEXT(), nullable=False),
    sa.Column('transformations', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('attack_type', sa.String(length=50), nullable=True),
    sa.Column('data_type', sa.String(length=50), nullable=True),
    sa.Column('nist_risk', sa.String(length=50), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('endpoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('http_payload', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('role_to_assign', sa.String(length=80), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('used_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['used_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invitations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invitations_code'), ['code'], unique=True)
        batch_op.create_index(batch_op.f('ix_invitations_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_invitations_is_used'), ['is_used'], unique=False)

    op.create_table('test_suites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('behavior', sa.String(length=255), nullable=True),
    sa.Column('objective', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dialogues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('endpoint_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('endpoint_headers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('endpoint_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('run_serially', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('endpoint_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoints.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('test_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_test_runs_endpoint_id'), ['endpoint_id'], unique=False)

    op.create_table('test_suite_cases',
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suites.id'], ),
    sa.PrimaryKeyConstraint('test_suite_id', 'test_case_id', name='pk_test_suite_cases')
    )
    op.create_table('test_run_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('current_sequence', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_runs.id'], name='fk_test_run_attempt_test_run_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('test_run_attempts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_test_run_attempts_test_run_id'), ['test_run_id'], unique=False)

    op.create_table('test_run_filters',
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('prompt_filter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['prompt_filter_id'], ['prompt_filters.id'], ),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_runs.id'], ),
    sa.PrimaryKeyConstraint('test_run_id', 'prompt_filter_id', name='pk_test_run_filters')
    )
    op.create_table('test_run_suites',
    sa.Column('test_run_id', sa.Integer(), nullable=False),
    sa.Column('test_suite_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_runs.id'], ),
    sa.ForeignKeyConstraint(['test_suite_id'], ['test_suites.id'], ),
    sa.PrimaryKeyConstraint('test_run_id', 'test_suite_id', name='pk_test_run_suites')
    )
    op.create_table('test_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_run_attempt_id', sa.Integer(), nullable=False),
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('response_data', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['test_run_attempt_id'], ['test_run_attempts.id'], name='fk_test_execution_run_attempt_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('test_executions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_test_executions_test_run_attempt_id'), ['test_run_attempt_id'], unique=False)

    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    with op.batch_alter_table('test_executions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_test_executions_test_run_attempt_id'))

    op.drop_table('test_executions')
    op.drop_table('test_run_suites')
    op.drop_table('test_run_filters')
    with op.batch_alter_table('test_run_attempts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_test_run_attempts_test_run_id'))

    op.drop_table('test_run_attempts')
    op.drop_table('test_suite_cases')
    with op.batch_alter_table('test_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_test_runs_endpoint_id'))

    op.drop_table('test_runs')
    op.drop_table('endpoint_headers')
    op.drop_table('dialogues')
    op.drop_table('test_suites')
    with op.batch_alter_table('invitations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invitations_is_used'))
        batch_op.drop_index(batch_op.f('ix_invitations_email'))
        batch_op.drop_index(batch_op.f('ix_invitations_code'))

    op.drop_table('invitations')
    op.drop_table('endpoints')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('test_cases')
    op.drop_table('references')
    op.drop_table('prompt_filters')
    op.drop_table('manual_test_records')
    # ### end Alembic commands ###
